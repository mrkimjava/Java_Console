CREATE TABLE LOTTONUM(
	SequenceNum NUMBER(10) 
	,LOCATION_ID VARCHAR(2) NOT NULL
	,PAY_DATE DATE NOT NULL
	,NUM1	NUMBER(2) NOT NULL
	,NUM2	NUMBER(2) NOT NULL
	,NUM3	NUMBER(2) NOT NULL
	,NUM4	NUMBER(2) NOT NULL
	,NUM5	NUMBER(2) NOT NULL
	,NUM6	NUMBER(2) NOT NULL
	,GRADE NUMBER(1)
);
ALTER TABLE LOTTONUM ADD CONSTRAINT LOTTONUM_SEQ_PK PRIMARY KEY(SEQUENCENUM);
--외래키(외부 PK) 지정 시 NULL도 가능하기 때문에 NOT NULL옵션은 별도로 추가해주어야함
ALTER TABLE LOTTONUM ADD CONSTRAINT LOTTONUM_ID_FK FOREIGN KEY(LOCATION_ID) REFERENCES LOCATION(LOCATION_ID);


CREATE TABLE LOCATION (
	LOCATION_ID VARCHAR2(2)
	,LOCATION_NAME VARCHAR2(20)
);
ALTER TABLE LOCATION ADD CONSTRAINT LOCATION_ID_PK PRIMARY KEY(LOCATION_ID);


CREATE TABLE WINNUMBER(
	WINNUM1 NUMBER(2) NOT NULL
	,WINNUM2 NUMBER(2) NOT NULL
	,WINNUM3 NUMBER(2) NOT NULL
	,WINNUM4 NUMBER(2) NOT NULL
	,WINNUM5 NUMBER(2) NOT NULL
	,WINNUM6 NUMBER(2) NOT NULL
	,BONUSNUM NUMBER(2)
);

--DEL_LOG 프로시저 생성--로그삭제기능
CREATE OR REPLACE PROCEDURE DEL_ALL_LOG
IS 
BEGIN 
	EXECUTE IMMEDIATE 'TRUNCATE TABLE LOTTONUM';
	EXECUTE IMMEDIATE 'TRUNCATE TABLE WINNUMBER';
	COMMIT;
END;

--ADD_RESULT 프로시저 생성--
CREATE OR REPLACE PROCEDURE ADD_RESULT
(
	GRADE_NUM NUMBER,
	SEQ_NUM NUMBER
)
IS 
BEGIN 
	UPDATE LOTTONUM SET GRADE = GRADE_NUM
 	WHERE SEQUENCENUM = SEQ_NUM AND GRADE IS NULL;
 	COMMIT;
END;

--V_LOTTONUM 뷰
CREATE OR REPLACE VIEW V_LOTTONUM
AS
	SELECT SEQUENCENUM SEQ, LOCATION_NAME LNAME, TO_CHAR(PAY_DATE,'YYYY/MM/DD (DY) HH24:MI:SS') PAYDATE,
		   NUM1,NUM2,NUM3,NUM4,NUM5,NUM6
	FROM LOTTONUM
	JOIN LOCATION USING(LOCATION_ID)
	ORDER BY SEQUENCENUM ASC;
	
	
--V_RESULT 뷰
CREATE OR REPLACE VIEW V_RESULT
AS
	SELECT SEQUENCENUM SEQ, LOCATION_NAME LNAME, NUM1,NUM2,NUM3,NUM4,NUM5,NUM6,GRADE
	FROM LOTTONUM
	JOIN LOCATION USING(LOCATION_ID)
	WHERE GRADE != 0 AND GRADE IS NOT NULL
	ORDER BY SEQUENCENUM ASC;	
	
	
--V_GRADE 뷰
CREATE OR REPLACE VIEW V_GRADE
AS
	SELECT DECODE(GRADE,0,'꽝 : '||COUNT(*)||' 회',GRADE||'등 : '||COUNT(*)||' 회 당첨!!') GRADE_RESULT, 
		   COUNT(*)*1000 TOTALPAY 
	FROM LOTTONUM  
	GROUP BY GRADE 
	ORDER BY GRADE_RESULT ASC;	
	

--V_NONRESULT 뷰
CREATE OR REPLACE VIEW V_NONRESULT
AS
	SELECT SEQUENCENUM SEQ,NUM1,NUM2,NUM3,NUM4,NUM5,NUM6 
	FROM LOTTONUM 
	WHERE GRADE IS NULL 
	ORDER BY SEQUENCENUM ASC;	
	
	
	
	
--지점별 당첨통계 
--V_AREA 생성
CREATE OR REPLACE VIEW V_AREA
AS
	SELECT CASE WHEN GROUPING(LOCATION_ID) = 1 THEN 'TOTAL'
				ELSE DECODE(LOCATION_ID, 'G1', '잠실역점', 'G2', '역삼역점', 'G3','목동점', 'G4','성수역점')
		   END LNAME,
		   CASE WHEN GROUPING(GRADE) = 1 THEN '합계'
		   		ELSE GRADE||'등' 
		   END GRADE,
		   COUNT(*)||'회' TOTAL 
	FROM LOTTONUM 
	WHERE GRADE != 0 AND GRADE IS NOT NULL
	GROUP BY ROLLUP(LOCATION_ID, GRADE)
	ORDER BY LOCATION_ID, GRADE ASC;
	
	
	
	
	